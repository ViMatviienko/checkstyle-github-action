# action.yml
name: "Code Checkstyle"
description: 'Greet someone and record the time'
inputs:
  github_token:
    description: "GITHUB_TOKEN"
    default: "${{ github.token }}"
  workdir:
    description: "Working directory relative to the root directory."
    default: "."
  ### Flags for reviewdog ###
  level:
    description: "Report level for reviewdog [info, warning, error]"
    default: "info"
  reporter:
    description: "Reporter of reviewdog command [github-pr-check, github-pr-review]."
    default: "github-pr-check"
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added, diff_context, file, nofilter].
    default: "added"
  fail_on_error:
    description: |
      Exit code for reviewdog when errors are found [true, false]
    default: "false"
  reviewdog_flags:
    description: "Additional reviewdog flags"
    default: ""
  ### Flags for checkstyle ###
  checkstyle_config:
    description: |
      Checkstyle is highly configurable and can be made to support almost any coding standard. 
      An example configuration files are supplied supporting the Sun Code Conventions, Google Java Style.
    required: true
    default: "google_checks.xml"
  checkstyle_version:
    description: |
      Checkstyle version to be used during analysis.
      For a list of available version numbers go to [Checkstyle release page](https://github.com/checkstyle/checkstyle/releases/).
    default: "10.3"
runs:
  using: "docker"
  image: "Dockerfile"